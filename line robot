from flask import Flask, request, abort

from linebot import (
    LineBotApi, WebhookHandler
)
from linebot.exceptions import (
    InvalidSignatureError
)
from linebot.models import (
    MessageEvent, TextMessage, TextSendMessage,
)

app = Flask(__name__)

line_bot_api = LineBotApi('48fec0e8-1ba4-4e8d-8358-248a100c21ea')
handler = WebhookHandler('84a3bba094b5de8e397b2d7631d6a1da')
profile = line_bot_api.get_profile("U3aca428c86db94ab1d6982d4d1ed469e")



@app.route("/callback", methods=['POST'])
def callback():
    # get X-Line-Signature header value
    signature = request.headers['X-Line-Signature']

    # get request body as text
    body = request.get_data(as_text=True)
    app.logger.info("Request body: " + body)

    # handle webhook body
    try:
        handler.handle(body, signature)
    except InvalidSignatureError:
        print("Invalid signature. Please check your channel access token/channel secret.")
        abort(400)

    return 'OK'


@handler.add(MessageEvent, message=TextMessage)
def handle_message(event):
    line_bot_api.reply_message(
        event.reply_token,
        TextSendMessage(text=event.message.text))


if __name__ == "__main__":
    app.run()

@handler.add(MessageEvent, message=TextMessage)
def message_text(event): 
    profile = line_bot_api.get_profile("U3aca428c86db94ab1d6982d4d1ed469e")
    if event.message.text == "WiFi密碼":
        line_bot_api.reply_message(event.reply_token,TextSendMessage(text="PELOTON-FITNESS/Password - xHFittyNe$$//PELOTON-GUEST/Password - !PelotonTP3"))
    else: 
        line_bot_api.reply_message(event.reply_token,TextSendMessage(text="Onepeloton"))
if __name__ == "__main__":
    arg_parser = ArgumentParser(
        usage='Usage: python ' + __file__ + ' [--port <port>] [--help]'
    )
    arg_parser.add_argument('-p', '--port', default=8000, help='port')
    arg_parser.add_argument('-d', '--debug', default=False, help='debug')
    options = arg_parser.parse_args()

    app.run(debug=options.debug, port=options.port)
